version: '2.0'
services:
    config-server:
        container_name: config-server
        build:
            context: .
            dockerfile: Dockerfile-configserver
        image: config-server:latest
        expose:
            - 8888
        ports:
            - 8888:8888
        networks:
            - spring-cloud-network
        logging:
            driver: json-file
    discovery-server:
        container_name: discovery-server
        build:
            context: .
            dockerfile: Dockerfile-DiscoveryServer
        image: discovery-server:latest
        entrypoint: /opt/bin/discoveryservice-entrypoint.sh
        environment:
            SPRING_APPLICATION_JSON: '{"spring":{"cloud":{"config":{"uri":"http://config-server:8888"}}}}'
            EUREKA_INSTANCE_PREFER_IP_ADDRESS: "false"
        expose:
            - 8761
        ports:
            - 8761:8761
        networks:
            - spring-cloud-network
        links:
            - config-server:config-server
        depends_on:
            - config-server
        logging:
            driver: json-file
    product-service:
        container_name: product-service
        build:
            context: .
            dockerfile: Dockerfile-ProductService
        image: product-service:latest
        entrypoint: /opt/bin/productservice-entrypoint.sh
        environment:
            SPRING_APPLICATION_JSON: '{"spring":{"cloud":{"config":{"uri":"http://config-server:8888"}}}}'
        expose:
            - 8080
        ports:
            - 8080:8080
        networks:
            - spring-cloud-network
        links:
            - config-server:config-server
            - discovery-server:discovery-server
        depends_on:
            - config-server
            - discovery-server
        logging:
            driver: json-file
    proxy-server:
        container_name: proxy-server
        build:
            context: .
            dockerfile: Dockerfile-ProxyServer
        image: proxy-server:latest
        entrypoint: /opt/bin/proxyservice-entrypoint.sh
        environment:
            SPRING_APPLICATION_JSON: '{"spring":{"cloud":{"config":{"uri":"http://config-server:8888"}}}}'
        expose:
            - 9999
        ports:
            - 9999:9999
        networks:
            - spring-cloud-network
        links:
            - config-server:config-server
            - discovery-server:discovery-server
        depends_on:
            - config-server
            - discovery-server
        logging:
            driver: json-file
networks:
    spring-cloud-network:
        driver: bridge
